# 有时会出现一些奇怪的现象，可能是由于前面的js执行处错误导致。
当js执行错误后会输出错误并停止后续js的执行

# Summery about event list
The former page of event list:
month-view:     router.go('/event/list/');
modify-event:   pathToGo = '/event/list/' + busytimeOrId._id; router.go(pathToGo);
event-detail:   action: () => {
                  router.go('/event/list/' + this.busytimeId);
                }

# something about keydown event.
when press csk in h5-dialog textInput, only e.keyCode is correct, and e.key is undefined.
if (e.keyCode === KeyboardEvent.DOM_VK_RETURN) {
  this.elements.dialogTextInput.blur();
}
In some condition, e.keyCode is zero, and a.key is correct, the use of e.key as below:
switch(evt.key) {
  case 'BrowserBack':
    break;
  case 'ArrowLeft':
    break;
  case 'ArrowRight':
    break;
  case 'ArrowDown':
    break;
  case 'ArrowUp':
    break;
  case 'AcaSoftLeft':
    evt.preventDefault();
    break;
  case 'Enter':
    break;
  case 'AcaSoftRight':
    break;
}

# Something about month view navigation.
> Something about Refactor month view navigation.
When the value of selectedDay is changed, if selected day is not the same as previous one, the signal 'selectedDayChange' will emit, and the function single_month -> _onSelectedDayChange will be exexuted. Some actions is done in this function: set focus on selectedDay, add 'selected' to class list of selected day.
> As timeController.selectedDay is set in app.js, on the first active of month view no 'selectedDayChange' will emit, so We need to set it manualy.
> Something need to care.
In monthly view, if we add this.controller.move(date); in KeyDownEvent callback, focus error may happen. The error is caused by the incorrect execute sequence of monthChange callback and navigation_map, the callback of monthChange should occur before navigation_map, as the selector of section.active is generated by monthChange callback.



# Visual Cursor需要browser权限

# Calendar List相关页面：
  -> Settings -> Default Calendar
  -> Calendar to Display
  -> Add Event -> Calendar
  -> Setup Calendar
> More info about Calendar List.
Calendar To Display: Offline Account -> Offline Calendar; Online Account -> Online Calendar
Modify Event: Offline Account -> Offline Calendar
Setup Calendar: Offline Calendar; Online Account.
AdvancedSetting -> default calendar: Offline Account -> Offline Calendar
> The form of Calendar List and Account List: 
Calendar To Display: ul and li
Advanced Settings -> Default Calendar
Modify Event: Select
Setup Calendar: 
The value of ModifyEvent is changed follow Advanced Settings.

# Location of index db: /data/local/storage/default/

# The fail of database operation maybe is caused by personal db operation, such as add or delete calendar by script.

# Some property of Object can not outputed by JSON.stringify(Object), such as the data.params in onactive of a page.

# Some thing need to notice about toast.
Sometimes, global component such as toast dialog optionmenu, not work as expected. There may be some reasons: z-index is smaller than current section; the section of global component is placed after current section.

# Summery about Calendar App:
1. The use of global toast.
this.app.toast.show({message: _('error-prior-to-1970')});
2. the class past present and future is set in month_day.js
3. Some files is not used any more.
settings.js   is replaced by advanced_settings.js;
view_event.js is replaced by event_detail.js

# The logic of modify event
(_createModel and _loadModel of event_base is the entry point of add event and modify event.)
modify_event
primary ->
formData ->
_persistEvent ->
store.providerFor ->
fetchProvider ->
verifyCaps ->
persistEvent
js/event_mutation.js

# The logic of save Notification
store/alarm.js
_processQueue ->
workQueue ->


8. The log of Notification and Alarm
> When add an event with alert(alarm), the related alarm object will be added to MozAlarmManager Queue, and the alarm will stay in MozAlarmManager even the event is deleted.
> When the alarm is triggered, the code will detect whether the alarm-related busytime or event exist. The Notification will not send if realted event or busytime not exist, so it will work ok even the alarm in  MozAlarmManager Queue is not correct.(js/controller/notification.js)
> As the logic of UX, when the busytime is deleted the notification bar of system app will be remove.
> The workflow of add alarm to AlarmManager
  var alarmTrans = alarmStore.db.transaction(
    ['alarms'],
    'readwrite'
  );
  alarmStore.persist(alarm, alarmTrans);
  The action is done by alarmTrans complete listener.
  _addDependents -> trans.addEventListener('complete', this._processQueue);
  _processQueue -> workQueue -> _moveAlarms -> dispatchAlarms ->
      navigator.mozAlarms.add(
        Calc.dateFromTransport(alarm.triggered),
        timezone,
        alarm
      )
> The deletion of obsolute notification is done in store/busytime.js. maybe it is better sync notification operation with alarm in store/alarm.js, but it is hard to get busytimeId in _removeDependents of store/alarm.js

9. unknow Exception
Maybe caused by transaction of add data to database.

10.
An IndexedDB transaction that was not yet complete has been aborted due to page navigation.